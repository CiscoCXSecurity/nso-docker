
* Assumptions and use cases
  - build images for production and development + CI
  - split between persistent data (docker shared volume) vs what goes into container
  - SSH host key belongs to persistent data
  - CDB persistent
  - logs persistent
  - NSO itself comes in container image
  - packages comes in container image
    - do package reload (force) on docker container startup
      - we should always use the packages that come in the container image
  - user creation on startup
  - monitor NSO liveness and report as container health
  - cleanly shut down NSO on container stop
  - make sure ncs-backup script works
  - describe 


* TODO finalize Dockerfiles etc [0/4]
  - [ ] decide how to do volumes
    - [ ] one volume vs many volumes?
      - CDB
    - [ ] logs go where?
      - some might want to persist logs
      - if syslog is used, no point in persisting logs locally
        - this means it should probably be separated from the persistent volume containing CDB etc
  - [ ] test that status thing works
    - suspect it doesn't when backup is running, so load lots of data (many gigabytes) into NCS, do backup which should then take considerable time and see what happens to status check meanwhile
  - [ ] expose what ports?
    - 80: ??? web?
    - 830: YES, NETCONF
    - 2022: ??
    - 2023: ??
    - 4334: YES, NETCONF call-home
    - 4569: CLI?
  - [ ] use CI_BUILD_ID if available as docker image tag

| folder      | configurable? |                  |
|-------------+---------------+------------------+
| backups     |               |                  |
| cdb         | true          |                  |
| packages    | true          |                  |
| rollbacks   | true          |                  |
| scripts     | true          |                  |
| state       | true          |                  |
| storedstate |               | is it even used? |
| streams     |               | used? ncs.confg per default seems to place notification streams in /state |
| target      |               |                  |

Working theory:
- set /ncs as rundir, meaning all of the above will default there
- configure packages directory in config file to point to /packages

* Running NSO in a Docker container
   This repository contains all you need to build Docker images out of Cisco NSO. It produces two Docker images;
   - a production image
     - stripped of documentation and similar to make it small
     - ... what else?
   - a development image
     - contains Java compiler and other useful tools
     - ... what else?

   The development image can be used immediately, for example as the image for a CI docker container runner to use for running CI jobs that involve compilation of NSO packages and similar. The production image is intended to be used as a base image on which you add your own packages, like NEDs and your service packages, to produce a final image for your environment.
   
* Usage
  - Download Cisco NSO
  - Place downloaded .bin file in ~nso-install-files/~
  - run ~make build~

** Docker image tags
It is recommended that the Docker images are tagged with an identifier that is unique per build.


** Mixed
   - TCP port 4334 for NETCONF call-home
